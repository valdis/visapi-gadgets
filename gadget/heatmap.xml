<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Terms heatmap" 
      description="Shows heat map based on terms and values"
      thumbnail="http://visapi-gadgets.googlecode.com/svn/trunk/image/thumb_wordcloud.png" 
      screenshot="http://visapi-gadgets.googlecode.com/svn/trunk/image/sh_wordcloud.png"
      scrolling="true">
    <Require feature="idi"/>
    <Require feature="locked-domain"/>  
  </ModulePrefs>
  <UserPref name="_table_query_url" display_name="Data source URL" required="true"/>
  <Content type="html">
  <![CDATA[
    <style>
    body,td {font-family: arial; font-size: 10px; }
    .sz1 {font-size: 10px; }
    .sz2 {font-size: 14px; }
    .sz3 {font-size: 18px; }
    .sz4 {font-size: 22px; }
    .sz5 {font-size: 26px; }
    .sz6 {font-size: 32px; }
    .sz7 {font-size: 36px; }
    .sz8 {font-size: 40px; }
    .sz9 {font-size: 44px; }
    .cl1 {color: #acc1f3; }
    .cl2 {color: #86a0dc; }
    .cl3 {color: #607ec5; }
    .cl4 {color: #264ca2; }
    .cl5 {color: #133b97; }
    .cl6 {color: #002a8b; }
    .cl7 {color: #071a41; }
    .cl8 {color: #081122; }
    .cl9 {color: #000000; }
    </style>
    
    <div id="chart">Loading...</div>

    <script type="text/javascript" src="http://www.google.com/jsapi"></script>
    <script type="text/javascript">
      function loadVisApi() {
        google.load("visualization", "1");
        google.setOnLoadCallback(initialize); // Set callback to run when API is loaded
      }  

      function initialize() {
        // Create and send the query.
        var prefs = new _IG_Prefs(); // User preferences
        gadgetHelper = new google.visualization.GadgetHelper();
        var query = gadgetHelper.createQueryFromPrefs(prefs);
        query.send(handleQueryResponse);  // Send the query with a callback function
      }

      _IG_RegisterOnloadHandler(loadVisApi);
 
      var MIN_UNIT_SIZE = 1;
      var MAX_UNIT_SIZE = 7;
      var RANGE_UNIT_SIZE = MAX_UNIT_SIZE - MIN_UNIT_SIZE;

      // Query response handler function.
      function handleQueryResponse(response) {
        // Default error message handling
        if (!gadgetHelper.validateResponse(response)) {
          return;
        }  

        var data = response.getDataTable();
        
        var outputDiv = document.getElementById('chart');

        // Data format validations.
        if (data.getNumberOfColumns() < 2 || data.getNumberOfColumns() > 3 ||
            data.getColumnType(0) != 'string' || data.getColumnType(1) != 'number' ||
            (data.getNumberOfColumns() == 3 && data.getColumnType(2) != 'number')) {
            
          outputDiv.innerHTML = 'First column should contain terms (words). <br>' + 
              'Second column should contain numeric values that will be translated into size. <br>' +
              'Third column is optional, and if exists, should contain values that will be translated into colors.';
          return;
        }

        var sizeMinFreq = 999999;
        var sizeMaxFreq = 0;

        var colorMinFreq = 999999;
        var colorMaxFreq = 0;

        for (var rowInd = 0; rowInd < data.getNumberOfRows(); rowInd++) {
          var f = data.getValue(rowInd, 1);
          if (f < sizeMinFreq) {
            sizeMinFreq = f;
          }
          if (f > sizeMaxFreq) {
            sizeMaxFreq = f;
          }
          
          f = data.getValue(rowInd, 2);
          if (f < colorMinFreq) {
            colorMinFreq = f;
          }
          if (f > colorMaxFreq) {
            colorMaxFreq = f;
          }
        }

        var sizeRange = sizeMaxFreq - sizeMinFreq;
        sizeRange = Math.max(sizeRange, 4);

        var colorRange = colorMaxFreq - colorMinFreq;
        colorRange = Math.max(colorRange, 4);

        var html = [];
        for (var r = 0; r < data.getNumberOfRows(); r++) {
          var text = data.getValue(r, 0);

          var freq = data.getValue(r, 1);
          var size = 
              MIN_UNIT_SIZE + Math.round((freq - sizeMinFreq) / sizeRange * RANGE_UNIT_SIZE);
              
          freq = data.getValue(r, 2);
          var color = 
              MIN_UNIT_SIZE + Math.round((freq - colorMinFreq) / colorRange * RANGE_UNIT_SIZE);

          html.push('<span class="sz', size, ' cl', color, '">', text, '</span> ');
        }

        outputDiv.innerHTML = html.join('');
      };
    </script>
  ]]>
 </Content>
</Module>