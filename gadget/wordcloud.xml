<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Word Cloud" 
      author="The visapi-gadgest project"
      author_email="visapi.gadgets@gmail.com"
      description="Shows which words appear more often in text and which less"
      thumbnail="http://visapi-gadgets.googlecode.com/svn/trunk/image/thumb_wordcloud.png" 
      screenshot="http://visapi-gadgets.googlecode.com/svn/trunk/image/sh_wordcloud.png">
    <Require feature="idi"/>
    <Require feature="locked-domain"/>  
  </ModulePrefs>
  <UserPref name="_table_query_url" display_name="Data source URL" required="true"/>
  <Content type="html">
  <![CDATA[
    <style>
    body,td {font-family: arial; font-size: 10px; }
    .sz1 {font-size: 10px; color: #acc1f3; }
    .sz2 {font-size: 14px; color: #86a0dc; }
    .sz3 {font-size: 18px; color: #607ec5; }
    .sz4 {font-size: 22px; color: #264ca2; }
    .sz5 {font-size: 26px; color: #133b97; }
    .sz6 {font-size: 32px; color: #002a8b; }
    .sz7 {font-size: 36px; color: #071a41; }
    .sz8 {font-size: 40px; color: #081122; }
    .sz9 {font-size: 44px; color: #000000; }
    </style>
    
    <div id="chart" style="overflow: auto"><img src="http://visapi-gadgets.googlecode.com/svn/trunk/image/spinner.gif" /></div>

    <script type="text/javascript" src="http://www.google.com/jsapi"></script>
    <script type="text/javascript">
      google.load("visualization", "1");
      google.setOnLoadCallback(initialize); // Set callback to run when API is loaded

      function initialize() {
        // Create and send the query.
        var prefs = new _IG_Prefs(); // User preferences
        gadgetHelper = new google.visualization.GadgetHelper();
        var container = document.getElementById('chart');
        container.style.width = document.body.clientWidth + 'px';
        container.style.height = document.body.clientHeight + 'px';
        var query = gadgetHelper.createQueryFromPrefs(prefs);
        query.send(handleQueryResponse);  // Send the query with a callback function
      }

      function addWords(text, list, map) {
        var word = '';
        for (var i = 0; i < text.length; i++) {
          var c = text.charAt(i);
          if (' ,.<>[]{}/`~!@#$%^&*()-_=+\'"\\|:;?\r\r\n'.indexOf(c) >= 0) {
            if (word.length > 0) {
              addWord(word, list, map);
            }
            word = '';
          } else {
            word += c;
          }
        }
        if (word.length > 0) {
          addWord(word, list, map);
        }
      }

      function addWord(word, list, map) {
      var wl = word.toLowerCase();
        if (map[wl]) {
          map[wl]++;
        } else {
          map[wl] = 1;
          list.push(word);
        }
      }
 
      var MIN_UNIT_SIZE = 1;
      var MAX_UNIT_SIZE = 7;
      var RANGE_UNIT_SIZE = MAX_UNIT_SIZE - MIN_UNIT_SIZE;

      // Query response handler function.
      function handleQueryResponse(response) {
        // Default error message handling
        if (!gadgetHelper.validateResponse(response))
          return;

        var data = response.getDataTable();
        var outputDiv = document.getElementById('chart');

        var wordMap = {};
        var wordList = [];

        for (var rowInd = 0; rowInd < data.getNumberOfRows(); rowInd++) {
          for (var colInd = 0; colInd < data.getNumberOfColumns(); colInd++) {
            if (data.getColumnType(colInd) == 'string') {
              addWords(data.getValue(rowInd, colInd), wordList, wordMap);
            }
          }
        }
      
        // Compute frequency range
        var minFreq = 999999;
        var maxFreq = 0;
        for (var word in wordMap) {
          var f = wordMap[word];
          minFreq = Math.min(minFreq, f);
          maxFreq = Math.max(maxFreq, f);
        }
        var range = maxFreq - minFreq;
        range = Math.max(range, 4);

        // Sort by text
        // <<<< make this optional, no, by text, by freq

        var html = [];
        for (var i = 0; i < wordList.length; i++) {
          var word = wordList[i];
          var text = word;
          var freq = wordMap[word.toLowerCase()];
          var size = 
              MIN_UNIT_SIZE + Math.round((freq - minFreq) / range * RANGE_UNIT_SIZE);
          html.push('<span class="sz', size, '">', text, '</span> ');
        }

        outputDiv.innerHTML = html.join('');
      };
    </script>
  ]]>
 </Content>
</Module>